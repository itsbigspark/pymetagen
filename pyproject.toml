[tool.poetry]
name = "pymetagen"
version = "0.2.4"
description = "Metadata generator using polars as backend."
authors = ["Smart Data Foundy <info@smartdatafoundry.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
pyarrow = "^17.0.0"
pandas = "^2.2.2"
regex = "^2024.5.15"
polars = ">= 0.20.31"
openpyxl = "^3.1.4"
click = "^8.1.7"
xlsxwriter = "^3.2.0"
typing-extensions = "^4.12.2"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.8.0"
pytest = "^8.2.2"
tox = "^4.15.1"

[tool.poetry.extras]
xlsx = ["xlsxwriter"]

[tool.poetry.scripts]
metagen = 'pymetagen.app:cli'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79
preview = true
skip-string-normalization = false
include = '\.pyi?$'

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
profile = "black"
line_length = 79

[tool.ruff]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "UP", # pyupgrade
]
target-version = "py39"
line-length = 79
ignore = [
    "E501",
] # Ignore line length errors, since we're using Black/docformatter

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]

[tool.docformatter]
black = true
style = "sphinx"

[tool.pytest.ini_options]
addopts = '--strict-markers --junitxml=test-reports/pytest.xml'
junit_family = 'xunit1'
