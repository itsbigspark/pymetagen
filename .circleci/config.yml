version: 2.1

orbs:
  sonarcloud: sonarsource/sonarcloud@2.0.0

commands:

  checkout-install:
    description: |
      Checkout the code and install dependencies
    steps:
      - checkout
      - restore_cache:
          key: poetry-cache-{{ checksum "poetry.lock" }}
      - run:
          name: Install dependencies
          command: poetry install --only=dev
      - save_cache:
          key: poetry-cache-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/.cache/pypoetry
  
  save-test-results:
    description: |
      Save test results
    steps:
      - store_artifacts:
          path: test-reports/
      - store_test_results:
          path: test-reports     

executors:
  python39:
    docker:
      - image: cimg/python:3.9
    resource_class: small
  python310:
    docker:
      - image: cimg/python:3.10
    resource_class: small
  python311:
    docker:
      - image: cimg/python:3.11
    resource_class: small
  python312:
    docker:
      - image: cimg/python:3.12
    resource_class: small

jobs:
  unit-test-39:
    executor: python39
    steps:
      - checkout-install
      - run:
          name: Run tests
          command: |
            poetry run tox -e py39
      - save-test-results
  unit-test-310:
    executor: python310
    steps:
      - checkout-install
      - run:
          name: Run tests
          command: |
            poetry run tox -e py310
      - save-test-results
  unit-test-311:
    executor: python311
    steps:
      - checkout-install
      - run:
          name: Run tests
          command: |
            poetry run tox -e py311 -- -- --cov=pymetagen
            poetry run coverage report -m
            poetry run coverage xml -o .coverage-reports/coverage.xml
      - save-test-results
      - run:
          name: mypy
          command: |
            mkdir -p .mypy-reports
            mypy | tee .mypy-reports/report.txt
            echo "Mypy report saved to .mypy-reports/report.txt"
      - sonarcloud/scan
  unit-test-312:
    executor: python312
    steps:
      - checkout-install
      - run:
          name: Run tests
          command: |
            poetry run tox -e py312
      - save-test-results

workflows:
  commit:
    # run on every commit
    jobs:
      - unit-test-39
      - unit-test-310
      - unit-test-311
      - unit-test-312
  
