version: 2.1

parameters:
  pythonversions:
    type: string
    default: "3.9 3.10 3.11 3.12"

orbs:
  sonarcloud: sonarsource/sonarcloud@2.0.0

commands:

  checkout-install:
    description: |
      Checkout the code and install dependencies
    steps:
      - checkout
      - restore_cache:
          key: poetry-cache-{{ checksum "poetry.lock" }}
      - run:
          name: Install dependencies
          command: poetry install
      - save_cache:
          key: poetry-cache-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/.cache/pypoetry

  install-python:
    description: |
      Install Python from pyenv
    steps:
      - restore_cache:
          key: pyenv-cache-<< pipeline.parameters.pythonversions >>
      - run:
          name: Install Python
          command: |
            pyenv install -s << pipeline.parameters.pythonversions >>
            pyenv global 3.12
      - save_cache:
          key: pyenv-cache
          paths:
            - /home/circleci/.pyenv/versions

  save-test-results:
    description: |
      Save test results
    steps:
      - store_artifacts:
          path: test-reports/
      - store_test_results:
          path: test-reports     

executors:
  python:
    docker:
      - image: cimg/python:3.12
    resource_class: small


jobs:
  unit-test:
    executor: python
    steps:
      - install-python
      - run:
          name: lock
          command: |
            poetry lock
      - checkout-install
      - run:
          name: Run tests
          command: |
            poetry run tox -- -- --cov=pymetagen
            poetry run coverage report -m
            poetry run coverage xml -o .coverage-reports/coverage.xml
      - save-test-results
      - run:
          name: mypy
          command: |
            mkdir -p .mypy-reports
            poetry run mypy | tee .mypy-reports/report.txt || true
            echo "Mypy report saved to .mypy-reports/report.txt"
      - sonarcloud/scan


workflows:
  commit:
    # run on every commit
    jobs:
      - unit-test:
          context:
            - SONARCLOUD

  
